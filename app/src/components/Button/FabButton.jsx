import { useState } from "react";
import { View, TouchableOpacity, StyleSheet, Animated } from "react-native";
import { SvgXml } from "react-native-svg";
import Icon from "react-native-vector-icons/FontAwesome";

export default function FabButton({ navigation, icon1, icon2, icon3, iconNav1, iconNav2, iconNav3 }) {
	const [primeiroIcon] = useState(new Animated.Value(40));
	const [segundoIcon] = useState(new Animated.Value(40));
	const [terceiroIcon] = useState(new Animated.Value(40));

	const [pop, setPop] = useState(false)

	const popIn = () => {
		setPop(true);
		Animated.timing(primeiroIcon, {
			toValue: 130,
			duration: 500,
			useNativeDriver: false,
		}).start();
		Animated.timing(segundoIcon, {
			toValue: 110,
			duration: 500,
			useNativeDriver: false,
		}).start();
		Animated.timing(terceiroIcon, {
			toValue: 130,
			duration: 500,
			useNativeDriver: false,
		}).start();
	}

	const popDut = () => {
		setPop(false);
		Animated.timing(primeiroIcon, {
			toValue: 40,
			duration: 500,
			useNativeDriver: false,
		}).start();
		Animated.timing(segundoIcon, {
			toValue: 40,
			duration: 500,
			useNativeDriver: false,
		}).start();
		Animated.timing(terceiroIcon, {
			toValue: 40,
			duration: 500,
			useNativeDriver: false,
		}).start();
	}
	const svgCode = `
	<svg width="22" height="35" viewBox="0 0 22 35" fill="none" xmlns="http://www.w3.org/2000/svg">
	<mask id="mask0_351_617" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="22" height="35">
	<path d="M21 25.0266H12.3004L12.1943 9.06406C12.1943 4.05624 14.8466 3.43025 14.8466 3.43025C14.8466 3.43025 17.9947 2.49391 17.9233 3.43025C17.605 7.60346 16.466 7.60344 14.1319 9.58571C11.7979 11.568 18.666 10.8377 19.833 6.24714C21.0048 1.63771 19.7269 1.36181 19.3025 1.1949C18.4538 0.861078 15.6246 1.02102 14.5284 1.1949C11.5578 1.92521 10.709 4.36923 10.3907 5.09954C10.1361 5.68379 10.0371 9.30751 10.0725 11.255L9.54197 10.8377C7.95057 9.16842 2.96421 9.16839 2.43374 9.58574C1.90328 10.0031 0.842349 11.881 1.585 14.8022C2.32765 17.7235 6.25308 19.3927 6.67745 19.3927C7.10183 19.3927 7.31401 19.2884 7.31401 19.2884C7.5262 19.1841 7.95057 18.6624 7.95057 18.6624C7.95057 18.6624 8.90543 17.8278 6.67745 17.0975C4.44948 16.3672 3.0703 11.9853 3.81295 11.7767C4.5556 11.568 9.43587 10.4204 9.54197 16.1586V25.0266L1.05456 25.0266C0.311916 29.7214 7.31053 35.079 12.3004 33.8946C18.4538 32.434 20.8939 27.7392 21 25.0266Z" fill="white" stroke="black"/>
	</mask>
	<g mask="url(#mask0_351_617)">
	<path d="M21 25.0266H12.3004L12.1943 9.06406C12.1943 4.05624 14.8466 3.43025 14.8466 3.43025C14.8466 3.43025 17.9947 2.49391 17.9233 3.43025C17.605 7.60346 16.466 7.60344 14.1319 9.58571C11.7979 11.568 18.666 10.8377 19.833 6.24714C21.0048 1.63771 19.7269 1.36181 19.3025 1.1949C18.4538 0.861078 15.6246 1.02102 14.5284 1.1949C11.5578 1.92521 10.709 4.36923 10.3907 5.09954C10.1361 5.68379 10.0371 9.30751 10.0725 11.255L9.54197 10.8377C7.95057 9.16842 2.96421 9.16839 2.43374 9.58574C1.90328 10.0031 0.842349 11.881 1.585 14.8022C2.32765 17.7235 6.25308 19.3927 6.67745 19.3927C7.10183 19.3927 7.31401 19.2884 7.31401 19.2884C7.5262 19.1841 7.95057 18.6624 7.95057 18.6624C7.95057 18.6624 8.90543 17.8278 6.67745 17.0975C4.44948 16.3672 3.0703 11.9853 3.81295 11.7767C4.5556 11.568 9.43587 10.4204 9.54197 16.1586V25.0266L1.05456 25.0266C0.311916 29.7214 7.31053 35.079 12.3004 33.8946C18.4538 32.434 20.8939 27.7392 21 25.0266Z" fill="white" stroke="white"/>
	<path d="M-1.44901 29.5714H22.2245" stroke="white"/>
	<path d="M9.16324 23.0408H12.4285" stroke="white"/>
	<path d="M12.7394 5.08791C13.0691 5.0771 13.3988 5.06555 13.7283 5.05338C13.7285 5.05337 13.7288 5.05336 13.7291 5.05335C13.9506 5.02008 14.1854 4.98533 14.0558 5.02513C13.9615 5.05409 13.8192 5.05008 13.7291 5.05335C13.6299 5.06824 13.5334 5.08283 13.4735 5.09031C13.2109 5.1231 12.9493 5.16031 12.6888 5.20167C12.4765 5.69932 12.3685 6.22597 12.3165 6.76235C12.3539 6.75775 12.3913 6.75315 12.4288 6.74855C13.3866 6.43879 14.3512 6.14247 15.3174 5.86598C15.6705 5.76493 16.029 5.66803 16.3951 5.64219C16.4555 5.63792 17.4237 5.65085 17.2442 5.87032C16.9612 6.21641 15.9822 6.25237 15.6551 6.30487C14.5831 6.47692 13.5059 6.61594 12.4288 6.74855C12.3906 6.76089 12.3524 6.77326 12.3143 6.78565C12.2737 7.21722 12.2689 7.65491 12.2746 8.08868C12.2774 8.30752 12.237 8.6828 12.3979 8.86C12.4933 8.96511 12.649 9.00151 12.7659 9.06858C12.7893 9.08202 13.2096 9.46887 13.0085 9.4575C12.1423 9.40851 11.2634 9.49614 10.3963 9.51182C9.83805 9.52191 9.27629 9.53581 8.71816 9.51182C8.65348 9.50904 8.46751 9.47729 8.53012 9.45967C9.10778 9.29709 9.71624 9.23249 10.2992 9.08162C10.4312 9.04747 10.8269 8.97339 10.6915 8.96429C10.5257 8.95316 10.3133 9.01292 10.1537 9.03816C9.37485 9.16132 8.6033 9.3033 7.8144 9.32279C7.74334 9.32454 7.51241 9.34962 7.73352 9.31627C7.97873 9.27929 8.21826 9.19841 8.45532 9.12507C9.19974 8.89477 9.94306 8.66772 10.6955 8.46891C11.0831 8.36649 11.4771 8.28005 11.856 8.143C12.1898 8.02227 11.9494 8.03436 11.7691 8.03436C11.3478 8.03436 10.9266 8.03752 10.5055 8.05174C9.87859 8.0729 9.25377 8.11336 8.62919 8.17342C8.57677 8.17846 8.44795 8.2327 8.47149 8.18211C8.47972 8.16441 8.50497 8.16563 8.52204 8.15821C9.72297 7.63584 10.9776 7.22105 12.2159 6.81763C12.2487 6.80696 12.2815 6.7963 12.3143 6.78565C12.315 6.77788 12.3157 6.77011 12.3165 6.76235C12.1005 6.78886 11.8844 6.81515 11.6685 6.84144L11.6498 6.84371C9.14904 7.14807 6.63116 7.36009 4.17105 7.95397C4.10743 7.96933 3.9234 8.02001 3.97696 7.98004C4.08258 7.90122 4.4663 7.71646 4.49657 7.70193C5.29121 7.32038 6.1116 7.00674 6.93894 6.71769C8.82806 6.05767 10.7302 5.51256 12.6888 5.20167C12.6994 5.17679 12.7102 5.15198 12.7214 5.12725C12.7273 5.1141 12.7333 5.10098 12.7394 5.08791C13.1807 4.13899 14.0247 3.39228 14.353 2.38961C14.4125 2.20788 14.3888 2.08962 14.3149 2.01505C13.6157 2.11121 12.9173 2.21358 12.22 2.32009C10.4062 2.59712 8.5985 2.98586 6.77315 3.16745C6.21781 3.2227 5.65417 3.24647 5.09705 3.20656C4.83017 3.18744 5.04388 3.15694 5.14558 3.13486C5.62361 3.03108 6.1078 2.96117 6.59119 2.89369C8.79474 2.58608 11.0003 2.2893 13.2046 1.98766C13.3835 1.96318 13.791 1.86852 14.0773 1.91249C15.4113 1.74219 16.748 1.60681 18.0954 1.53356C18.4787 1.51272 18.864 1.47341 19.2479 1.46403C19.3344 1.46192 19.0754 1.48073 18.9891 1.48793C17.4278 1.61811 15.8692 1.80128 14.3149 2.01505C14.3888 2.08962 14.4125 2.20788 14.353 2.38961C14.0247 3.39228 13.1807 4.13899 12.7394 5.08791Z" fill="white"/>
	<path d="M2.41003 5.33583C2.94411 5.33583 3.47422 5.29908 4.00728 5.26631C5.46518 5.17668 6.92495 5.18575 8.38455 5.17722C10.1652 5.16682 11.9486 5.1191 13.7283 5.05338C13.8183 5.05005 13.9612 5.05418 14.0558 5.02513C14.2434 4.96752 13.6674 5.06612 13.4735 5.09031C11.2365 5.36956 9.07938 5.96987 6.93894 6.71769C6.1116 7.00674 5.29121 7.32038 4.49657 7.70193C4.4663 7.71646 4.08258 7.90122 3.97696 7.98004C3.9234 8.02001 4.10743 7.96933 4.17105 7.95397C6.63116 7.36009 9.14904 7.14807 11.6498 6.84371C12.9862 6.68106 14.3247 6.5184 15.6551 6.30487C15.9822 6.25237 16.9612 6.21641 17.2442 5.87032C17.4237 5.65085 16.4555 5.63792 16.3951 5.64219C16.029 5.66803 15.6705 5.76493 15.3174 5.86598C14.2796 6.16296 13.2436 6.48282 12.2159 6.81763C10.9776 7.22105 9.72297 7.63584 8.52204 8.15821C8.50497 8.16563 8.47972 8.16441 8.47149 8.18211C8.44795 8.2327 8.57677 8.17846 8.62919 8.17342C9.25377 8.11336 9.87859 8.0729 10.5055 8.05174C10.9266 8.03752 11.3478 8.03436 11.7691 8.03436C11.9494 8.03436 12.1898 8.02227 11.856 8.143C11.4771 8.28005 11.0831 8.36649 10.6955 8.46891C9.94306 8.66772 9.19974 8.89477 8.45532 9.12507C8.21826 9.19841 7.97873 9.27929 7.73352 9.31627C7.51241 9.34962 7.74334 9.32454 7.8144 9.32279C8.6033 9.3033 9.37485 9.16132 10.1537 9.03816C10.3133 9.01292 10.5257 8.95316 10.6915 8.96429C10.8269 8.97339 10.4312 9.04747 10.2992 9.08162C9.71624 9.23249 9.10778 9.29709 8.53012 9.45967C8.46751 9.47729 8.65348 9.50904 8.71816 9.51182C9.27629 9.53581 9.83805 9.52191 10.3963 9.51182C11.2634 9.49614 12.1423 9.40851 13.0085 9.4575C13.2096 9.46887 12.7893 9.08202 12.7659 9.06858C12.649 9.00151 12.4933 8.96511 12.3979 8.86C12.237 8.6828 12.2774 8.30752 12.2746 8.08868C12.2614 7.08074 12.3049 6.05168 12.7214 5.12725C13.1573 4.15952 14.0202 3.40609 14.353 2.38961C14.5878 1.67253 13.5264 1.94363 13.2046 1.98766C11.0003 2.2893 8.79474 2.58608 6.59119 2.89369C6.1078 2.96117 5.62361 3.03108 5.14558 3.13486C5.04388 3.15694 4.83017 3.18744 5.09705 3.20656C5.65417 3.24647 6.21781 3.2227 6.77315 3.16745C8.5985 2.98586 10.4062 2.59712 12.22 2.32009C14.4673 1.97682 16.7254 1.67667 18.9891 1.48793C19.0754 1.48073 19.3344 1.46192 19.2479 1.46403C18.864 1.47341 18.4787 1.51272 18.0954 1.53356C15.7215 1.66262 13.3806 1.98456 11.0291 2.3505C10.2345 2.47417 9.40554 2.67641 8.59684 2.67641" stroke="white"/>
	<path d="M8.34695 25.0815H13.2449" stroke="white"/>
	<path d="M2.63266 25.0815H9.16327" stroke="white"/>
	<path d="M0.591858 24.6735H3.85716" stroke="white"/>
	<path d="M0.183655 25.0815H3.0408" stroke="white"/>
	<path d="M12.4286 25.0815H21.4081" stroke="white"/>
	<path d="M12.4222 25.672C12.19 25.6832 11.9642 25.7349 11.7298 25.7396C11.4518 25.7452 11.1753 25.7553 10.8976 25.7657C10.5566 25.7785 10.2127 25.7688 9.87169 25.7688C9.33631 25.7688 8.80418 25.7135 8.26867 25.7135C8.02199 25.7135 7.77532 25.7135 7.52864 25.7135C6.96535 25.7135 6.38605 25.7189 5.82649 25.652C5.56193 25.6204 5.29479 25.6305 5.02882 25.6305C4.9425 25.6305 4.85617 25.6305 4.76985 25.6305C4.69995 25.6305 4.608 25.6159 4.55161 25.6582" stroke="white"/>
	<path d="M0.95517 25.1879H5.81033" stroke="white"/>
	<path d="M5.50604 24.9666H9.32378" stroke="white"/>
	<path d="M11.8412 25.6997H13.2521" stroke="white"/>
	<path d="M12.2701 22.7534H12.6164" stroke="white"/>
	<path d="M7.61969 27.7778H12.7821" stroke="white"/>
	<path d="M11.7066 18.7865V21.927" stroke="white"/>
	<path d="M12.2228 20.0342V22.2712" stroke="white"/>
	<path d="M9.53281 23.3391V24.6545" stroke="white"/>
	<path d="M9.49576 24.2838H12.6266" stroke="white"/>
	</g>
	</svg>`;
	return (
		<View style={{
			flex: 1,
		}}>
			<Animated.View style={[styles.btn, { bottom: primeiroIcon }]}>
				<TouchableOpacity onPress={() => navigation.navigate(iconNav1)}>
					<Icon name={icon1} size={25} color="#fff" />
				</TouchableOpacity>
			</Animated.View>
			<Animated.View style={[styles.btn, { bottom: segundoIcon, right: segundoIcon }]}>
				<TouchableOpacity onPress={() => navigation.navigate(iconNav2)}>
					<Icon name={icon2} size={25} color="#fff" />
				</TouchableOpacity>
			</Animated.View>
			<Animated.View style={[styles.btn, { right: terceiroIcon }]}>
				<TouchableOpacity onPress={() => navigation.navigate(iconNav3)}>
					<Icon name={icon3} size={25} color="#fff" />
				</TouchableOpacity>
			</Animated.View>
			<TouchableOpacity
				style={styles.btn}
				onPress={() => {
					pop === false ? popIn() : popDut()
				}}
			>
				<SvgXml xml={svgCode} width="40" height="40" />
			</TouchableOpacity>
		</View>
	)
}

const styles = StyleSheet.create({
	btn: {
		backgroundColor: '#8DC53D',
		width: 60,
		height: 60,
		position: "absolute",
		bottom: 40,
		right: 40,
		borderRadius: 50,
		justifyContent: 'center',
		alignItems: 'center',
	},
});